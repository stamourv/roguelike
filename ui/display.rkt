#lang racket

(require "../utilities/grid.rkt"
         "../utilities/terminal.rkt")
(require "../engine/character.rkt"
         "../engine/player.rkt"
         "../engine/common.rkt"
         "../engine/visibility.rkt")
(provide show-state)

(define (show-state)
  (cursor-notification-head)
  (printf-notification "~a\n" (character-name player))
  (printf-notification "level ~a\n" (character-level player))
  (printf-notification "~a xp pts\n" (player-character-experience player))
  (printf-notification "")
  (when (altered-attr? player 'hp)
    (terminal-colors 'white 'black)) ;; TODO abstract that
  (display (character-hp player))
  (terminal-reset)
  (printf "/~a hp\n" (character-max-hp player))
  
  (printf-notification "AC: ")
  (when (altered-attr? player 'natural-ac)
    (terminal-colors 'white 'black))
  (display (get-armor-class player))
  (terminal-reset)
  (newline)
  
  (printf-notification "str: ")
  (when (altered-attr? player 'str)
    (terminal-colors 'white 'black))
  (display (character-str player))
  (terminal-reset)
  (display "	int: ")
  (when (altered-attr? player 'int)
    (terminal-colors 'white 'black))
  (display (character-int player))
  (terminal-reset)
  (newline)
  
  (printf-notification "dex: ")
  (when (altered-attr? player 'dex)
    (terminal-colors 'white 'black))
  (display (character-dex player))
  (terminal-reset)
  (display "	wis: ")
  (when (altered-attr? player 'wis)
    (terminal-colors 'white 'black))
  (display (character-wis player))
  (terminal-reset)
  (newline)
  
  (printf-notification "con: ")
  (when (altered-attr? player 'con)
    (terminal-colors 'white 'black))
  (display (character-con player))
  (terminal-reset)
  (display "	cha: ")
  (when (altered-attr? player 'cha)
    (terminal-colors 'white 'black))
  (display (character-cha player))
  (terminal-reset)
  (newline)
  
  (cursor-home)
  (clear-line)
  (printf "Floor ~a\n" (player-character-floor-no player))
  (show-grid (player-map player)
	     #:print-fun (visibility-show (player-view player)
                                          (player-map  player))))
